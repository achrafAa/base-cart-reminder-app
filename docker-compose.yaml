version: '3'

networks:
  webappnetwork:

services:
  webapp:
    build :
      context: .
      dockerfile: .docker/nginx.dockerfile
      args:
        - NGINXUSER=${NGINXUSER:-www-data}
        - NGINXGROUP=${NGINXGROUP:-www-data}
    container_name : nginx
    ports :
      - 8080:80
    volumes:
      - ./:/var/www/html/
    depends_on:
      - php
      - mysql
      - redis
      - mailhog
      - cron
    networks:
      - webappnetwork

  mysql:
    build: .docker/mysql
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      - webappnetwork
  php:
    build:
      context: .
      dockerfile: .docker/php.dockerfile
      args:
        - PHPUSER=${PHPUSER:-www-data}
        - PHPGROUP=${PHPGROUP:-www-data}
    container_name: php
    volumes:
      - ./:/var/www/html
    networks:
      - webappnetwork
  cron:
    build:
      context: .
      dockerfile: .docker/cron.dockerfile
    container_name: cron
    entrypoint: [ "bash", "-c", "cron -f"]
    depends_on:
      - redis
      - mysql
    volumes:
      - ./:/var/www/html
    networks:
      - webappnetwork

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - webappnetwork

  composer:
    build:
      context: .
      dockerfile: .docker/composer.dockerfile
      args:
        - PHPUSER=${PHPUSER:-www-data}
        - PHPGROUP=${PHPGROUP:-www-data}
    container_name: composer
    volumes:
      - ./:/var/www/html:delegated
    working_dir: /var/www/html
    depends_on:
      - php
    user: ${PHPUSER:-www-data}
    entrypoint: [ 'composer' ]
    networks:
      - webappnetwork
  npm:
    image: node:18
    container_name: npm
    volumes:
      - ./:/var/www/html:delegated
    ports:
      - 3000:3000
      - 3001:3001
    working_dir: /var/www/html
    entrypoint: [ 'npm' ]
    networks:
      - webappnetwork

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - webappnetwork
  adminer:
    image: adminer
    restart: always
    ports:
      - 8888:8080